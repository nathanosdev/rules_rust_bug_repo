# crate build file###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //3rdparty:crates_vendor
###############################################################################

load(
    "@bazel_skylib//lib:selects.bzl",
    "selects",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT/Apache-2.0
# ])

rust_library(
    name = "web_sys",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        "//conditions:default": {
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "AngleInstancedArrays",
        "Document",
        "Element",
        "Event",
        "EventTarget",
        "ExtBlendMinmax",
        "ExtColorBufferFloat",
        "ExtColorBufferHalfFloat",
        "ExtDisjointTimerQuery",
        "ExtFragDepth",
        "ExtSRgb",
        "ExtShaderTextureLod",
        "ExtTextureFilterAnisotropic",
        "Gpu",
        "GpuAdapter",
        "GpuAddressMode",
        "GpuAutoLayoutMode",
        "GpuBindGroup",
        "GpuBindGroupDescriptor",
        "GpuBindGroupEntry",
        "GpuBindGroupLayout",
        "GpuBindGroupLayoutDescriptor",
        "GpuBindGroupLayoutEntry",
        "GpuBlendComponent",
        "GpuBlendFactor",
        "GpuBlendOperation",
        "GpuBlendState",
        "GpuBuffer",
        "GpuBufferBinding",
        "GpuBufferBindingLayout",
        "GpuBufferBindingType",
        "GpuBufferDescriptor",
        "GpuCanvasAlphaMode",
        "GpuCanvasConfiguration",
        "GpuCanvasContext",
        "GpuColorDict",
        "GpuColorTargetState",
        "GpuCommandBuffer",
        "GpuCommandBufferDescriptor",
        "GpuCommandEncoder",
        "GpuCommandEncoderDescriptor",
        "GpuCompareFunction",
        "GpuCompilationInfo",
        "GpuCompilationMessage",
        "GpuCompilationMessageType",
        "GpuComputePassDescriptor",
        "GpuComputePassEncoder",
        "GpuComputePipeline",
        "GpuComputePipelineDescriptor",
        "GpuCullMode",
        "GpuDepthStencilState",
        "GpuDevice",
        "GpuDeviceDescriptor",
        "GpuDeviceLostInfo",
        "GpuDeviceLostReason",
        "GpuError",
        "GpuErrorFilter",
        "GpuExtent3dDict",
        "GpuFeatureName",
        "GpuFilterMode",
        "GpuFragmentState",
        "GpuFrontFace",
        "GpuImageCopyBuffer",
        "GpuImageCopyExternalImage",
        "GpuImageCopyTexture",
        "GpuImageCopyTextureTagged",
        "GpuImageDataLayout",
        "GpuIndexFormat",
        "GpuLoadOp",
        "GpuMipmapFilterMode",
        "GpuMultisampleState",
        "GpuObjectDescriptorBase",
        "GpuOrigin2dDict",
        "GpuOrigin3dDict",
        "GpuOutOfMemoryError",
        "GpuPipelineDescriptorBase",
        "GpuPipelineLayout",
        "GpuPipelineLayoutDescriptor",
        "GpuPowerPreference",
        "GpuPrimitiveState",
        "GpuPrimitiveTopology",
        "GpuProgrammableStage",
        "GpuQuerySet",
        "GpuQuerySetDescriptor",
        "GpuQueryType",
        "GpuQueue",
        "GpuRenderBundle",
        "GpuRenderBundleDescriptor",
        "GpuRenderBundleEncoder",
        "GpuRenderBundleEncoderDescriptor",
        "GpuRenderPassColorAttachment",
        "GpuRenderPassDepthStencilAttachment",
        "GpuRenderPassDescriptor",
        "GpuRenderPassEncoder",
        "GpuRenderPipeline",
        "GpuRenderPipelineDescriptor",
        "GpuRequestAdapterOptions",
        "GpuSampler",
        "GpuSamplerBindingLayout",
        "GpuSamplerBindingType",
        "GpuSamplerDescriptor",
        "GpuShaderModule",
        "GpuShaderModuleDescriptor",
        "GpuStencilFaceState",
        "GpuStencilOperation",
        "GpuStorageTextureAccess",
        "GpuStorageTextureBindingLayout",
        "GpuStoreOp",
        "GpuSupportedFeatures",
        "GpuSupportedLimits",
        "GpuTexture",
        "GpuTextureAspect",
        "GpuTextureBindingLayout",
        "GpuTextureDescriptor",
        "GpuTextureDimension",
        "GpuTextureFormat",
        "GpuTextureSampleType",
        "GpuTextureView",
        "GpuTextureViewDescriptor",
        "GpuTextureViewDimension",
        "GpuUncapturedErrorEvent",
        "GpuUncapturedErrorEventInit",
        "GpuValidationError",
        "GpuVertexAttribute",
        "GpuVertexBufferLayout",
        "GpuVertexFormat",
        "GpuVertexState",
        "GpuVertexStepMode",
        "HtmlCanvasElement",
        "HtmlElement",
        "HtmlImageElement",
        "ImageBitmap",
        "ImageBitmapRenderingContext",
        "MessageEvent",
        "Navigator",
        "Node",
        "NodeList",
        "OesElementIndexUint",
        "OesStandardDerivatives",
        "OesTextureFloat",
        "OesTextureFloatLinear",
        "OesTextureHalfFloat",
        "OesTextureHalfFloatLinear",
        "OesVertexArrayObject",
        "OffscreenCanvas",
        "WebGl2RenderingContext",
        "WebGlActiveInfo",
        "WebGlBuffer",
        "WebGlFramebuffer",
        "WebGlProgram",
        "WebGlQuery",
        "WebGlRenderbuffer",
        "WebGlRenderingContext",
        "WebGlSampler",
        "WebGlShader",
        "WebGlSync",
        "WebGlTexture",
        "WebGlTransformFeedback",
        "WebGlUniformLocation",
        "WebGlVertexArrayObject",
        "WebglColorBufferFloat",
        "WebglCompressedTextureAstc",
        "WebglCompressedTextureEtc",
        "WebglCompressedTextureEtc1",
        "WebglCompressedTexturePvrtc",
        "WebglCompressedTextureS3tc",
        "WebglCompressedTextureS3tcSrgb",
        "WebglDebugRendererInfo",
        "WebglDebugShaders",
        "WebglDepthTexture",
        "WebglDrawBuffers",
        "WebglLoseContext",
        "Window",
        "Worker",
        "gpu_map_mode",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select_with_or({
        # deps iterated here
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.3.60",
    deps = [
    ] + select_with_or({
        # deps iterated here
        "//conditions:default": [
            "@crates_vendor__js-sys-0.3.60//:js_sys",
            "@crates_vendor__wasm-bindgen-0.2.83//:wasm_bindgen",
        ],
    }),
)
