# crate build file###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //3rdparty:crates_vendor
###############################################################################

load(
    "@bazel_skylib//lib:selects.bzl",
    "selects",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT OR Apache-2.0
# ])

rust_library(
    name = "wgpu",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        # cfg(any(not(target_arch = "wasm32"), target_os = "emscripten"))
        (
            "@rules_rust//rust/platform:aarch64-apple-darwin",
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-apple-ios-sim",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:armv7-linux-androideabi",
            "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:i686-apple-darwin",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:i686-unknown-freebsd",
            "@rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@rules_rust//rust/platform:riscv32imc-unknown-none-elf",
            "@rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): {
            "@crates_vendor__wgpu-hal-0.14.0//:wgpu_hal": "hal",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types": "wgt",
        },
        # cfg(not(target_arch = "wasm32"))
        (
            "@rules_rust//rust/platform:aarch64-apple-darwin",
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-apple-ios-sim",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:armv7-linux-androideabi",
            "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:i686-apple-darwin",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:i686-unknown-freebsd",
            "@rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@rules_rust//rust/platform:riscv32imc-unknown-none-elf",
            "@rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): {
            "@crates_vendor__wgpu-core-0.14.0//:wgpu_core": "wgc",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types": "wgt",
        },
        "//conditions:default": {
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types": "wgt",
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "default",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2021",
    proc_macro_deps = [
    ] + select_with_or({
        # deps iterated here
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.14.0",
    deps = [
    ] + select_with_or({
        # deps iterated here
        # cfg(any(not(target_arch = "wasm32"), target_os = "emscripten"))
        (
            "@rules_rust//rust/platform:aarch64-apple-darwin",
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-apple-ios-sim",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:armv7-linux-androideabi",
            "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:i686-apple-darwin",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:i686-unknown-freebsd",
            "@rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@rules_rust//rust/platform:riscv32imc-unknown-none-elf",
            "@rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            # Target Deps
            "@crates_vendor__wgpu-hal-0.14.0//:wgpu_hal",

            # Common Deps
            "@crates_vendor__arrayvec-0.7.2//:arrayvec",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__parking_lot-0.12.1//:parking_lot",
            "@crates_vendor__raw-window-handle-0.5.0//:raw_window_handle",
            "@crates_vendor__smallvec-1.10.0//:smallvec",
            "@crates_vendor__static_assertions-1.1.0//:static_assertions",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types",
        ],
        # cfg(not(target_arch = "wasm32"))
        (
            "@rules_rust//rust/platform:aarch64-apple-darwin",
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-apple-ios-sim",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:armv7-linux-androideabi",
            "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:i686-apple-darwin",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:i686-unknown-freebsd",
            "@rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@rules_rust//rust/platform:riscv32imc-unknown-none-elf",
            "@rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            # Target Deps
            "@crates_vendor__wgpu-core-0.14.0//:wgpu_core",

            # Common Deps
            "@crates_vendor__arrayvec-0.7.2//:arrayvec",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__parking_lot-0.12.1//:parking_lot",
            "@crates_vendor__raw-window-handle-0.5.0//:raw_window_handle",
            "@crates_vendor__smallvec-1.10.0//:smallvec",
            "@crates_vendor__static_assertions-1.1.0//:static_assertions",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types",
        ],
        # cfg(target_arch = "wasm32")
        (
            "@rules_rust//rust/platform:wasm32-unknown-unknown",
            "@rules_rust//rust/platform:wasm32-wasi",
        ): [
            # Target Deps
            "@crates_vendor__js-sys-0.3.60//:js_sys",
            "@crates_vendor__naga-0.10.0//:naga",
            "@crates_vendor__parking_lot-0.12.1//:parking_lot",
            "@crates_vendor__wasm-bindgen-0.2.83//:wasm_bindgen",
            "@crates_vendor__wasm-bindgen-futures-0.4.33//:wasm_bindgen_futures",
            "@crates_vendor__web-sys-0.3.60//:web_sys",

            # Common Deps
            "@crates_vendor__arrayvec-0.7.2//:arrayvec",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__parking_lot-0.12.1//:parking_lot",
            "@crates_vendor__raw-window-handle-0.5.0//:raw_window_handle",
            "@crates_vendor__smallvec-1.10.0//:smallvec",
            "@crates_vendor__static_assertions-1.1.0//:static_assertions",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types",
        ],
        "//conditions:default": [
            "@crates_vendor__arrayvec-0.7.2//:arrayvec",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__parking_lot-0.12.1//:parking_lot",
            "@crates_vendor__raw-window-handle-0.5.0//:raw_window_handle",
            "@crates_vendor__smallvec-1.10.0//:smallvec",
            "@crates_vendor__static_assertions-1.1.0//:static_assertions",
            "@crates_vendor__wgpu-types-0.14.0//:wgpu_types",
        ],
    }),
)
